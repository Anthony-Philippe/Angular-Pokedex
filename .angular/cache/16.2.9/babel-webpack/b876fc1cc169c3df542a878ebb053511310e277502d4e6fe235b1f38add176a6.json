{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/data.service\";\nimport * as i3 from \"../list/list.component\";\nexport class HomeComponent {\n  constructor(formBuilder, dataService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.searchCtrl = new FormControl(''); // Add searchCtrl property\n    this.searchCtrl = new FormControl('', {\n      validators: [Validators.required],\n      nonNullable: true\n    });\n    this.searchForm = this.formBuilder.group({\n      search: this.searchCtrl\n    });\n    this.searchCtrl.valueChanges.subscribe(searchTerm => {\n      this.filterPokemonsByName(searchTerm);\n    });\n  }\n  ngOnInit() {\n    // Initialize your data or fetch it from your service\n    this.dataService.getPokemons(10, 1).subscribe(pokemons => {\n      this.listPokemonsAvailable = pokemons;\n      this.listPokemonsDiplayed = pokemons;\n    });\n  }\n  filterPokemonsByName(searchTerm) {\n    console.log(searchTerm);\n    if (!searchTerm) {\n      // If the search term is empty, show all pokemons\n      this.listPokemonsDiplayed = this.listPokemonsAvailable;\n    } else {\n      // Filter pokemons by name using the search term\n      this.listPokemonsDiplayed = this.listPokemonsAvailable.filter(pokemon => pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"pokemons\"], [3, \"formGroup\"], [3, \"formControl\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-list\", 0);\n        i0.ɵɵelementStart(1, \"div\")(2, \"form\", 1);\n        i0.ɵɵtext(3, \" Chercher des Pok\\u00E9mons : \");\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"pokemons\", ctx.listPokemonsDiplayed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.searchCtrl);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i3.ListComponent],\n    styles: [\"[_nghost-%COMP%] {\\n    display: flex;\\n    min-height: 80vh;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1pbi1oZWlnaHQ6IDgwdmg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","HomeComponent","constructor","formBuilder","dataService","searchCtrl","validators","required","nonNullable","searchForm","group","search","valueChanges","subscribe","searchTerm","filterPokemonsByName","ngOnInit","getPokemons","pokemons","listPokemonsAvailable","listPokemonsDiplayed","console","log","filter","pokemon","name","toLowerCase","includes","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance"],"sources":["/home/anthony/ISEN/Angular/AngularProject/src/app/home/home.component.ts","/home/anthony/ISEN/Angular/AngularProject/src/app/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, UntypedFormGroup, FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { DataService } from '../service/data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  searchForm: FormGroup; // Fix the type declaration and remove the incorrect initialization\n  searchCtrl: FormControl = new FormControl(''); // Add searchCtrl property\n  listPokemonsAvailable!: any[]\n  listPokemonsDiplayed!: any[]\n\n  constructor(private formBuilder: FormBuilder, private dataService: DataService) {\n    this.searchCtrl = new FormControl('', {\n      validators: [Validators.required],\n      nonNullable: true\n    });\n\n    this.searchForm = this.formBuilder.group({\n      search: this.searchCtrl\n    });\n\n    this.searchCtrl.valueChanges.subscribe((searchTerm: string) => {\n      this.filterPokemonsByName(searchTerm);\n    });\n  }\n\n  ngOnInit() {\n    // Initialize your data or fetch it from your service\n    this.dataService.getPokemons(10, 1).subscribe((pokemons: any[]) => {\n      this.listPokemonsAvailable = pokemons;\n      this.listPokemonsDiplayed = pokemons;\n    });\n  }\n\n  filterPokemonsByName(searchTerm: string) {\n    console.log(searchTerm);\n    if (!searchTerm) {\n      // If the search term is empty, show all pokemons\n      this.listPokemonsDiplayed = this.listPokemonsAvailable;\n    } else {\n      // Filter pokemons by name using the search term\n      this.listPokemonsDiplayed = this.listPokemonsAvailable.filter((pokemon) =>\n        pokemon.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n  }\n}\n\n\n\n","<app-list [pokemons]=\"listPokemonsDiplayed\"></app-list>\r\n\r\n<div>\r\n    <form [formGroup]=\"searchForm\">\r\n        Chercher des Pokémons : <input [formControl]=\"searchCtrl\">\r\n    </form>\r\n</div>\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,gBAAgB;;;;;AAS3C,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAJjE,KAAAC,UAAU,GAAgB,IAAIN,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IAK7C,IAAI,CAACM,UAAU,GAAG,IAAIN,WAAW,CAAC,EAAE,EAAE;MACpCO,UAAU,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC;MACjCC,WAAW,EAAE;KACd,CAAC;IAEF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACvCC,MAAM,EAAE,IAAI,CAACN;KACd,CAAC;IAEF,IAAI,CAACA,UAAU,CAACO,YAAY,CAACC,SAAS,CAAEC,UAAkB,IAAI;MAC5D,IAAI,CAACC,oBAAoB,CAACD,UAAU,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN;IACA,IAAI,CAACZ,WAAW,CAACa,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAACJ,SAAS,CAAEK,QAAe,IAAI;MAChE,IAAI,CAACC,qBAAqB,GAAGD,QAAQ;MACrC,IAAI,CAACE,oBAAoB,GAAGF,QAAQ;IACtC,CAAC,CAAC;EACJ;EAEAH,oBAAoBA,CAACD,UAAkB;IACrCO,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;IACvB,IAAI,CAACA,UAAU,EAAE;MACf;MACA,IAAI,CAACM,oBAAoB,GAAG,IAAI,CAACD,qBAAqB;KACvD,MAAM;MACL;MACA,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACD,qBAAqB,CAACI,MAAM,CAAEC,OAAO,IACpEA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACb,UAAU,CAACY,WAAW,EAAE,CAAC,CAC9D;;EAEL;EAAC,QAAAE,CAAA,G;qBAxCU3B,aAAa,EAAA4B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAblC,aAAa;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1Bb,EAAA,CAAAe,SAAA,kBAAuD;QAEvDf,EAAA,CAAAgB,cAAA,UAAK;QAEGhB,EAAA,CAAAiB,MAAA,qCAAwB;QAAAjB,EAAA,CAAAe,SAAA,eAAkC;QAC9Df,EAAA,CAAAkB,YAAA,EAAO;;;QALDlB,EAAA,CAAAmB,UAAA,aAAAL,GAAA,CAAAvB,oBAAA,CAAiC;QAGjCS,EAAA,CAAAoB,SAAA,GAAwB;QAAxBpB,EAAA,CAAAmB,UAAA,cAAAL,GAAA,CAAAlC,UAAA,CAAwB;QACKoB,EAAA,CAAAoB,SAAA,GAA0B;QAA1BpB,EAAA,CAAAmB,UAAA,gBAAAL,GAAA,CAAAtC,UAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}